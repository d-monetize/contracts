{
  "contractName": "SubscriptionRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36104fd806100cf6000396000f3fe608060405234801561001057600080fd5b5060043610610069576000357c010000000000000000000000000000000000000000000000000000000090048063715018a61461006e5780638da5cb5b146100785780638f32d59b146100c2578063f2fde38b146100e4575b600080fd5b610076610128565b005b610080610261565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ca61028a565b604051808215151515815260200191505060405180910390f35b610126600480360360208110156100fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e1565b005b61013061028a565b6101a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6102e961028a565b61035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61036481610367565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806104ac6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a723058201125164805b5f6bce262e6838364308d90cf0392fa14ada4e5404be7e41303d70029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610069576000357c010000000000000000000000000000000000000000000000000000000090048063715018a61461006e5780638da5cb5b146100785780638f32d59b146100c2578063f2fde38b146100e4575b600080fd5b610076610128565b005b610080610261565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ca61028a565b604051808215151515815260200191505060405180910390f35b610126600480360360208110156100fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e1565b005b61013061028a565b6101a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6102e961028a565b61035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61036481610367565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806104ac6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a723058201125164805b5f6bce262e6838364308d90cf0392fa14ada4e5404be7e41303d70029",
  "sourceMap": "89:1483:3:-;;;666:10:12;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;89:1483:3;;;;;;",
  "deployedSourceMap": "89:1483:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;89:1483:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:12;;;:::i;:::-;;814:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1885:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1599:137;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;814:77::-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;1885:107::-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;2093:225::-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o",
  "source": "pragma solidity 0.5.8;\n\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\n\ncontract SubscriptionRegistry is Ownable {\n  // event SubscriptionCreated(\n  //   address indexed subscription,\n  //   address indexed owner,\n  //   address indexed token,\n  //   uint amount,\n  //   uint interval,\n  //   uint bounty\n  // );\n  //\n  // event SubscriptionDeleted(address indexed subscription);\n  //\n  // event Subscribed(\n  //   address indexed subscription,\n  //   address indexed subscriber\n  // );\n  //\n  // event Unsubscribed(\n  //   address indexed subscription,\n  //   address indexed subscriber\n  // );\n  //\n  // modifier onlyRegistered() {\n  //   require(isRegistered[msg.sender], \"Not registered\");\n  //   _;\n  // }\n  //\n  // function register(\n  //   address _subscription,\n  //   address _owner, address _token, uint _amount, uint _interval, uint _bounty\n  // ) onlyOwner public {\n  //   require(!isRegistered[_subscription], \"Already registered\");\n  //\n  //   isRegistered[_subscription] = true;\n  //\n  //   emit SubscriptionCreated(\n  //     _subscription,\n  //     _owner,\n  //     _token,\n  //     _amount,\n  //     _interval,\n  //     _bounty\n  //   );\n  // }\n  //\n  // function logSubscriptionDeleted() onlyRegistered public {\n  //   emit SubscriptionDeleted(msg.sender);\n  // }\n  //\n  // function logSubscribed(address _subscriber) onlyRegistered public {\n  //   emit Subscribed(msg.sender, _subscriber);\n  // }\n  //\n  // function logUnsubscribed(address _subscriber) onlyRegistered public {\n  //   emit Unsubscribed(msg.sender, _subscriber);\n  // }\n}\n",
  "sourcePath": "/home/t4sk/bkp/dev/t4sk/d-monetize/contracts/contracts/SubscriptionRegistry.sol",
  "ast": {
    "absolutePath": "/home/t4sk/bkp/dev/t4sk/d-monetize/contracts/contracts/SubscriptionRegistry.sol",
    "exportedSymbols": {
      "SubscriptionRegistry": [
        461
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 457,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 458,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 1250,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 459,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1249,
              "src": "122:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1249",
                "typeString": "contract Ownable"
              }
            },
            "id": 460,
            "nodeType": "InheritanceSpecifier",
            "src": "122:7:3"
          }
        ],
        "contractDependencies": [
          1249
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          1249
        ],
        "name": "SubscriptionRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 462,
        "src": "89:1483:3"
      }
    ],
    "src": "0:1573:3"
  },
  "legacyAST": {
    "absolutePath": "/home/t4sk/bkp/dev/t4sk/d-monetize/contracts/contracts/SubscriptionRegistry.sol",
    "exportedSymbols": {
      "SubscriptionRegistry": [
        461
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 457,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 458,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 1250,
        "src": "24:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 459,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1249,
              "src": "122:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1249",
                "typeString": "contract Ownable"
              }
            },
            "id": 460,
            "nodeType": "InheritanceSpecifier",
            "src": "122:7:3"
          }
        ],
        "contractDependencies": [
          1249
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          1249
        ],
        "name": "SubscriptionRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 462,
        "src": "89:1483:3"
      }
    ],
    "src": "0:1573:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-07-20T03:35:16.054Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}